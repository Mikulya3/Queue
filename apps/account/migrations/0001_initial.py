


# Generated by Django 4.1.7 on 2023-06-11 13:03
# Generated by Django 4.2.2 on 2023-06-07 18:00

# Generated by Django 4.2.2 on 2023-06-07 18:00

# Generated by Django 4.2.2 on 2023-06-13 12:26


import apps.account.managers
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='QueueUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('Last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('middle_name', models.CharField(blank=True, max_length=150, verbose_name='middle_name')),
                ('position', models.CharField(choices=[('admin', 'Administrator'), ('operator', 'Operator')], max_length=100, verbose_name='positions')),
                ('window_number', models.CharField(max_length=100, verbose_name='window number')),
                ('note', models.TextField(blank=True, verbose_name='note')),
                ('auth_mode', models.CharField(choices=[('domain', 'Domain'), ('embedded', 'Embedded')], max_length=100)),
                ('blocked', models.BooleanField(default=False)),
                ('call_outside_queue', models.BooleanField(default=False)),
                ('modify_queue_list', models.BooleanField(default=False)),
                ('create_and_close_tickets', models.BooleanField(default=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('activation_code', models.CharField(blank=True, max_length=6)),
                ('domain_auth', models.BooleanField(default=True)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('is_blocked', models.BooleanField(default=False)),
                ('access_level', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', apps.account.managers.UserManager()),
            ],
        ),
    ]
